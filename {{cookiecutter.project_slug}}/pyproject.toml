[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"


[tool.pdm]
[tool.pdm.dev-dependencies]
test = [
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
    "coverage>=7.6.1",
]
qa = [
    "ruff>=0.6.2",
    "pre-commit>=3.8.0",
    "isort>=5.13.2",
    "pre-commit-hooks>=4.6.0",
    "pyright>=1.1.377",
    "nox>=2024.4.15",
]
docs = [
    "mkdocs-material>=9.5.33",
    "mkdocstrings-python>=1.10.8",
    "mkdocs-table-reader-plugin>=3.0.1",
]


[project]
name = "{{cookiecutter.project_slug}}"
version = "0.1.0"
description = "{{cookiecutter.project_short_description}}"
readme = "README.md"
license = { text ="MIT License" }
requires-python = ">={{cookiecutter.python_requires}}"

authors = [
    { name="{{cookiecutter.project_author}}", email="{{cookiecutter.author_email}}"}
]

dependencies = [
]


[project.urls]
"Sourcecode" = "{{cookiecutter.project_github_url}}"
"Documentation" = "https://{{cookiecutter.github_owner}}.github.io/{{cookiecutter.project_slug}}/"


[tool.setuptools]
include-package-data = true
zip-safe = false


[tool.setuptools.packages.find]
where = ["."]
exclude = ["tests/*"]


[tool.check-manifest]
ignore = [
    "docs",
    "docs/**",
    "notebooks",
    "notebooks/**",
    ".pre-commit-config.yaml",
    ".gitignore",
    "noxfile.py",
    "mkdocs.yml",
]


[tool.isort]
profile = "black"


[tool.pytest.ini_options]
testpaths = ["tests/"]
addopts = "--cov={{cookiecutter.project_slug}} --cov-report=html --verbose"


[tool.ruff]
line-length = 100
